import{R as i}from"./index.9eb23429.js";const l=async a=>{let n=null;const o=await fetch(`${i}/chunk`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},h=async(a,n,o)=>{let t=null;const e=await fetch(`${i}/chunk/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({chunk_size:n,chunk_overlap:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return e},u=async a=>{let n=null;const o=await fetch(`${i}/template`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return(o==null?void 0:o.template)??""},p=async a=>{let n=null;const o=await fetch(`${i}/query/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},d=async(a,n)=>{let o=null;const t=await fetch(`${i}/query/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),o=e.detail,null));if(o)throw o;return t},y=async(a,n,o)=>{const t=new FormData;t.append("file",o),t.append("collection_name",n);let e=null;const r=await fetch(`${i}/doc`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${a}`},body:t}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(e=c.detail,console.log(c),null));if(e)throw e;return r},w=async(a,n,o)=>{let t=null;const e=await fetch(`${i}/web`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:o,collection_name:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return e},f=async(a,n,o,t=null)=>{let e=null;const r=await fetch(`${i}/query/doc`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({collection_name:n,query:o,k:t})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(e=c.detail,null));if(e)throw e;return r},j=async(a,n,o,t)=>{let e=null;const r=await fetch(`${i}/query/collection`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({collection_names:n,query:o,k:t})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(e=c.detail,null));if(e)throw e;return r},T=async a=>{let n=null;const o=await fetch(`${i}/scan`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return o},$=async a=>{let n=null;const o=await fetch(`${i}/reset`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return o};export{f as a,w as b,l as c,p as d,h as e,d as f,u as g,j as q,$ as r,T as s,y as u};
